plugins {
	id 'java'
	id 'org.springframework.boot' version '3.+'
	id 'io.spring.dependency-management' version '1.+'
	id "org.sonarqube" version "5.+"
	id "jacoco"
	
}

group = 'de.unistuttgart.iste.meitrex'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

def jacocoEnabled = System.properties.getProperty("jacocoEnabled") ?: "true"

// Apply JaCoCo settings only if jacaco is enable
if (jacocoEnabled.toBoolean()) {
	project.logger.lifecycle('Applying jacoco settings from jacoco.gradle')
	apply from: rootProject.file("jacoco.gradle")
}

sonarqube {
  properties {
    property("sonar.projectKey", "MEITREX_template-microservice")
    property("sonar.organization", "meitrex")
    property("sonar.host.url", "https://sonarcloud.io")
  }

}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.modelmapper:modelmapper:3.+'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.+'
	implementation 'org.apache.commons:commons-text:1.11.+'
	implementation 'io.vertx:vertx-json-schema:4.5.+'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation "org.mockito:mockito-core:5.+"
	testImplementation 'org.hamcrest:hamcrest:2.+'
	testImplementation "org.testcontainers:postgresql:1.+"
	testImplementation "org.testcontainers:junit-jupiter:1.+"
}

tasks.named('test') {
	useJUnitPlatform()
}
